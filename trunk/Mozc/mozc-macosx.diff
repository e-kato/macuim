Index: build_tools/mozc_version.py
===================================================================
--- build_tools/mozc_version.py	(revision 39)
+++ build_tools/mozc_version.py	(working copy)
@@ -110,7 +110,7 @@
   def IsDevChannel(self):
     """Returns true if the parsed version is dev-channel."""
     if len(self._revision) >= 3 and self._revision[-3] == '1':
-      return True
+      return False
 
     return False
 
Index: unix/ibus/main.cc
===================================================================
--- unix/ibus/main.cc	(revision 39)
+++ unix/ibus/main.cc	(working copy)
@@ -49,7 +49,7 @@
   // Don't wait() child process termination.
   struct sigaction sa;
   sa.sa_handler = SIG_IGN;
-  ::sigemptyset(&sa.sa_mask);
+  sigemptyset(&sa.sa_mask);
   sa.sa_flags = 0;
   CHECK_EQ(0, ::sigaction(SIGCHLD, &sa, NULL));
   // TODO(taku): move this function inside client::Session::LaunchTool
Index: unix/uim/uim-macuim.gyp
===================================================================
--- unix/uim/uim-macuim.gyp	(revision 0)
+++ unix/uim/uim-macuim.gyp	(revision 0)
@@ -0,0 +1,99 @@
+#
+# Copyright (c) 2010 uim Project http://code.google.com/p/uim/
+#
+# All rights reserved.
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions
+# are met:
+# 1. Redistributions of source code must retain the above copyright
+#    notice, this list of conditions and the following disclaimer.
+# 2. Redistributions in binary form must reproduce the above copyright
+#    notice, this list of conditions and the following disclaimer in the
+#    documentation and/or other materials provided with the distribution.
+# 3. Neither the name of authors nor the names of its contributors
+#    may be used to endorse or promote products derived from this software
+#    without specific prior written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS'' AND
+# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE
+# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
+# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+# SUCH DAMAGE.
+#
+
+{
+  'variables': {
+    'relative_dir': 'unix/uim',
+    'pkg_config_libs': [
+      'uim',
+    ],
+    'uim_dep_include_dirs': [
+      '/Library/Frameworks/UIM.framework/Versions/Current/Headers',
+    ],
+    'uim_dependencies': [
+      '../../base/base.gyp:base',
+      '../../client/client.gyp:client',
+      '../../languages/languages.gyp:global_language_spec',
+      '../../languages/japanese/japanese.gyp:language_dependent_spec_japanese',
+    ],
+  },
+  'targets': [
+    {
+      'target_name': 'uim_mozc_lib',
+      'type': 'static_library',
+      'sources': [
+        'key_translator.cc',
+      ],
+      'dependencies': [
+        '../../session/session_base.gyp:genproto_session',
+      ],
+      'cflags': [
+        '<!@(pkg-config --cflags <@(pkg_config_libs))',
+      ],
+      'include_dirs': [
+        '<@(uim_dep_include_dirs)',
+      ],
+    },
+    {
+      'target_name': 'uim-mozc',
+      'type': 'loadable_module',
+      'sources': [
+        'mozc.cc',
+      ],
+      'dependencies': [
+        '<@(uim_dependencies)',
+        'uim_mozc_lib',
+      ],
+      'cflags': [
+        '<!@(pkg-config --cflags <@(pkg_config_libs))',
+      ],
+      'include_dirs': [
+        '<@(uim_dep_include_dirs)',
+      ],
+      'libraries': [
+        #'<!@(pkg-config --libs-only-l <@(pkg_config_libs))',
+        'UIM.framework',
+        '/usr/lib/libiconv.dylib',
+      ],
+      'ldflags': [
+        '<!@(pkg-config --libs-only-L <@(pkg_config_libs))',
+      ],
+      'library_dirs': [
+      ],
+      'xcode_settings': {
+       'GCC_SYMBOLS_PRIVATE_EXTERN': 'NO',
+       'DYLIB_COMPATIBILITY_VERSION': '',
+       'DYLIB_CURRENT_VERSION': '',
+       'EXECUTABLE_PREFIX': 'lib',
+       'EXECUTABLE_EXTENSION': 'so',
+      }
+    },
+  ],
+}
Index: uim-macfink.gyp
===================================================================
--- unix/uim/uim-macfink.gyp	(revision 0)
+++ unix/uim/uim-macfink.gyp	(revision 0)
@@ -0,0 +1,103 @@
+#
+# Copyright (c) 2010 uim Project http://code.google.com/p/uim/
+#
+# All rights reserved.
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions
+# are met:
+# 1. Redistributions of source code must retain the above copyright
+#    notice, this list of conditions and the following disclaimer.
+# 2. Redistributions in binary form must reproduce the above copyright
+#    notice, this list of conditions and the following disclaimer in the
+#    documentation and/or other materials provided with the distribution.
+# 3. Neither the name of authors nor the names of its contributors
+#    may be used to endorse or promote products derived from this software
+#    without specific prior written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS'' AND
+# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE
+# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
+# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+# SUCH DAMAGE.
+#
+
+{
+  'variables': {
+    'relative_dir': 'unix/uim',
+    'pkg_config_libs': [
+      'uim',
+    ],
+    'uim_dep_include_dirs': [
+      '/sw/include/uim',
+      '/sw/include',
+    ],
+    'uim_dependencies': [
+      '../../base/base.gyp:base',
+      '../../client/client.gyp:client',
+      '../../languages/languages.gyp:global_language_spec',
+      '../../languages/japanese/japanese.gyp:language_dependent_spec_japanese',
+    ],
+  },
+  'targets': [
+    {
+      'target_name': 'uim_mozc_lib',
+      'type': 'static_library',
+      'sources': [
+        'key_translator.cc',
+      ],
+      'dependencies': [
+        '../../session/session_base.gyp:genproto_session',
+      ],
+      'cflags': [
+        '<!@(pkg-config --cflags <@(pkg_config_libs))',
+      ],
+      'include_dirs': [
+        '<@(uim_dep_include_dirs)',
+      ],
+    },
+    {
+      'target_name': 'uim-mozc',
+      'type': 'loadable_module',
+      'sources': [
+        'mozc.cc',
+      ],
+      'dependencies': [
+        '<@(uim_dependencies)',
+        'uim_mozc_lib',
+      ],
+      'cflags': [
+        '<!@(pkg-config --cflags <@(pkg_config_libs))',
+      ],
+      'include_dirs': [
+        '<@(uim_dep_include_dirs)',
+      ],
+      'libraries': [
+        #'<!@(pkg-config --libs-only-l <@(pkg_config_libs))',
+        '/sw/lib/libuim.dylib',
+        '/sw/lib/libuim-scm.dylib',
+	'/sw/lib/libintl.dylib',
+	'/sw/lib/libiconv.dylib',
+      ],
+      'ldflags': [
+        '<!@(pkg-config --libs-only-L <@(pkg_config_libs))',
+      ],
+      'library_dirs': [
+        '/sw/lib',
+      ],
+      'xcode_settings': {
+       'GCC_SYMBOLS_PRIVATE_EXTERN': 'NO',
+       'DYLIB_COMPATIBILITY_VERSION': '',
+       'DYLIB_CURRENT_VERSION': '',
+       'EXECUTABLE_PREFIX': 'lib',
+       'EXECUTABLE_EXTENSION': 'so',
+      }
+    },
+  ],
+}
Index: mac/mozc_server_info
===================================================================
--- mac/mozc_server_info	(revision 0)
+++ mac/mozc_server_info	(revision 0)
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+ <key>CFBundleDevelopmentRegion</key>
+ <string>Japanese</string>
+ <key>CFBundleDisplayName</key>
+ <string>MozcConverter</string>
+ <key>CFBundleExecutable</key>
+ <string>MozcConverter</string>
+ <key>CFBundleIconFile</key>
+ <string>product_icon.icns</string>
+ <key>CFBundleIdentifier</key>
+ <string>org.mozc.inputmethod.Japanese.Converter</string>
+ <key>CFBundleInfoDictionaryVersion</key>
+ <string>6.0</string>
+ <key>CFBundleName</key>
+ <string>MozcConverter</string>
+ <key>CFBundlePackageType</key>
+ <string>APPL</string>
+ <key>CFBundleSignature</key>
+ <string>????</string>
+ <key>CFBundleVersion</key>
+ <string>${GOOGLE_VERSIONINFO_LONG}</string>
+ <key>CFBundleShortVersionString</key>
+ <string>${GOOGLE_VERSIONINFO_SHORT}</string>
+ <key>CFBundleGetInfoString</key>
+ <string>${GOOGLE_VERSIONINFO_FINDER}</string>
+ <key>NSHumanReadableCopyright</key>
+ <string>${GOOGLE_VERSIONINFO_ABOUT}</string>
+ <key>CSResourcesFileMapped</key>
+ <true/>
+ <key>LSBackgroundOnly</key>
+ <string>1</string>
+ <key>NSPrincipalClass</key>
+ <string>NSApplication</string>
+</dict>
+</plist>
Index: mac/org.mozc.inputmethod.Japanaes.Converter.MacUIM.plist
===================================================================
--- mac/org.mozc.inputmethod.Japanaes.Converter.MacUIM.plist	(revision 0)
+++ mac/org.mozc.inputmethod.Japanaes.Converter.MacUIM.plist	(revision 0)
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>Program</key>
+	<string>/Library/Mozc/MozcConverter.app/Contents/MacOS/MozcConverter</string>
+	<key>Label</key>
+	<string>org.mozc.inputmethod.Japanese.Converter</string>
+	<key>MachServices</key>
+	<dict>
+		<key>org.mozc.inputmethod.Japanese.Converter.mozc_session</key>
+		<true/>
+	</dict>
+	<key>KeepAlive</key>
+	<false/>
+</dict>
+</plist>
Index: server/mozc_server.cc
===================================================================
--- server/mozc_server.cc	(revision 84)
+++ server/mozc_server.cc	(working copy)
@@ -114,7 +114,11 @@
   const language::LanguageDependentSpecInterface *language_dependent_spec =
       language::GlobalLanguageSpec::GetLanguageDependentSpec();
 
+#if defined(OS_MACOSX) && !defined(GOOGLE_JAPANESE_INPUT_BUILD)
+  string mutex_name = "mozc_server_";
+#else
   string mutex_name = "server_";
+#endif
   mutex_name.append(language_dependent_spec->GetLanguageName());
   mozc::ProcessMutex mutex(mutex_name.c_str());
   if (!mutex.Lock()) {
Index: base/base.gyp
===================================================================
--- base/base.gyp	(revision 48)
+++ base/base.gyp	(working copy)
@@ -72,13 +72,13 @@
             'mac_process.mm',
             'mac_util.mm',
           ],
-          'conditions': [
-            ['branding=="GoogleJapaneseInput"', {
-              'sources': [
-                'crash_report_handler.mm',
-               ],
-            }],
-          ],
+          #'conditions': [
+          #  ['branding=="GoogleJapaneseInput"', {
+          #    'sources': [
+          #      'crash_report_handler.mm',
+          #     ],
+          #  }],
+          #],
         }],
         ['OS=="win"', {
           'sources': [ 'win_util.cc' ],
Index: base/mac_util.mm
===================================================================
--- base/mac_util.mm	(revision 48)
+++ base/mac_util.mm	(working copy)
@@ -39,12 +39,14 @@
 
 namespace mozc {
 namespace {
+#ifdef GOOGLE_JAPANESE_INPUT_BUILD
 const char kServerDirectory[] =
     "/Library/Input Methods/" kProductPrefix ".app/Contents/Resources";
-#ifdef GOOGLE_JAPANESE_INPUT_BUILD
 const char kProjectPrefix[] =
     "com.google.inputmethod.Japanese.";
 #elif defined(MOZC_BUILD)
+const char kServerDirectory[] =
+    "/Library/" kProductPrefix;
 const char kProjectPrefix[] =
     "org.mozc.inputmethod.Japanese.";
 #else
Index: base/util.cc
===================================================================
--- base/util.cc	(revision 48)
+++ base/util.cc	(working copy)
@@ -1470,7 +1470,8 @@
 
 #elif defined(OS_MACOSX)
   dir = MacUtil::GetApplicationSupportDirectory();
-#ifdef GOOGLE_JAPANESE_INPUT_BUILD
+//#ifdef GOOGLE_JAPANESE_INPUT_BUILD
+#if 1
   dir = Util::JoinPath(dir, "Google");
   // The permission of ~/Library/Application Support/Google seems to be 0755.
   // TODO(komatsu): nice to make a wrapper function.
Index: base/mac_process.mm
===================================================================
--- base/mac_process.mm	(revision 84)
+++ base/mac_process.mm	(working copy)
@@ -100,7 +100,11 @@
 
   // The Mozc Tool apps reside in the same directory where the mozc server does.
   NSString *toolAppPath =
+#ifdef GOOGLE_JAPANESE_INPUT_BUILD
       [NSString stringWithUTF8String:MacUtil::GetServerDirectory().c_str()];
+#else
+      @"/Library/Mozc/MozcTool.app/Contents/Resources";
+#endif
 
   if (appName != nil) {
     toolAppPath = [toolAppPath stringByAppendingPathComponent:appName];
Index: base/logging.cc
===================================================================
--- base/logging.cc	(revision 48)
+++ base/logging.cc	(working copy)
@@ -213,7 +213,7 @@
   snprintf(buf, sizeof(buf),
            "%4.4d-%2.2d-%2.2d %2.2d:%2.2d:%2.2d %u "
 #ifndef OS_LINUX  // = OS_WINDOWS or OS_MACOSX
-           "%u",
+           "%llu",
 #else
            "%lu",
 #endif
@@ -228,7 +228,7 @@
            ::GetCurrentThreadId()
 #elif defined(OS_MACOSX)
            ::getpid(),
-           reinterpret_cast<uint32>(pthread_self())
+           reinterpret_cast<uint64>(pthread_self())
 #else  // = OS_LINUX
            ::getpid(),
            pthread_self()  // returns unsigned long.
Index: base/process.cc
===================================================================
--- base/process.cc	(revision 48)
+++ base/process.cc	(working copy)
@@ -50,6 +50,7 @@
 #include <spawn.h>  // for posix_spawn().
 #include <sys/stat.h>
 #include "base/mac_process.h"
+#include <crt_externs.h>
 #endif  // OS_MACOSX
 
 #ifdef OS_LINUX
@@ -67,8 +68,10 @@
 // Defined somewhere in libc. We can't pass NULL as the 6th argument of
 // posix_spawn() since Qt applications use (at least) DISPLAY and QT_IM_MODULE
 // environment variables.
+#ifndef OS_MACOSX
 extern char **environ;
 #endif
+#endif
 
 #ifdef OS_WINDOWS
 namespace {
@@ -309,6 +312,9 @@
   // posix_spawn returns 0 even if kMozcServer doesn't exist, because
   // the return value of posix_spawn is basically determined
   // by the return value of fork().
+#if OS_MACOSX
+  char **environ = *_NSGetEnviron();
+#endif
   const int result = ::posix_spawn(
       &tmp_pid, path.c_str(), NULL, NULL, const_cast<char* const*>(argv.get()),
       environ);
Index: client/server_launcher.cc
===================================================================
--- client/server_launcher.cc	(revision 39)
+++ client/server_launcher.cc	(working copy)
@@ -57,7 +57,11 @@
 namespace mozc {
 namespace client {
 namespace {
+#if defined(OS_MACOSX) && !defined(GOOGLE_JAPANESE_INPUT_BUILD)
+const char kServerName[] = "mozc_session";
+#else
 const char kServerName[] = "session";
+#endif
 
 // Wait at most kServerWaitTimeout msec until server gets ready
 const uint32 kServerWaitTimeout = 20000;  // 20 sec
Index: ipc/mach_ipc.cc
===================================================================
--- ipc/mach_ipc.cc	(revision 48)
+++ ipc/mach_ipc.cc	(working copy)
@@ -183,7 +183,11 @@
 
   virtual bool IsServerRunning(const string &name) const {
     string server_label = MacUtil::GetLabelForSuffix("");
+#ifdef GOOGLE_JAPANESE_INPUT_BUILD
     if (name == "session") {
+#else
+    if (name == "mozc_session") {
+#endif
       server_label += "Converter";
     } else if (name == "renderer") {
       server_label += "Renderer";
Index: session/session_server.cc
===================================================================
--- session/session_server.cc	(revision 57)
+++ session/session_server.cc	(working copy)
@@ -43,8 +43,13 @@
 namespace {
 const int kNumConnections = 10;
 const int kTimeOut = 5000;  // 5000msec
+#if defined(OS_MACOSX) && !defined(GOOGLE_JAPANESE_INPUT_BUILD)
+const char kSessionName[] = "mozc_session";
+const char kEventName[] = "mozc_session";
+#else
 const char kSessionName[] = "session";
 const char kEventName[] = "session";
+#endif
 }
 
 namespace mozc {
Index: base/password_manager.cc
===================================================================
--- base/password_manager.cc	(revision 57)
+++ base/password_manager.cc	(working copy)
@@ -274,7 +274,7 @@
 //////////////////////////////////////////////////////////////////
 // DeprecatedMacPasswordManager
 namespace {
-static const char kMacPasswordManagerName[] = kProductPrefix;
+static const char kMacPasswordManagerName[] = "GoogleJapaneseInput";
 }  // anonymous namespace
 
 // This is a deprecated Mac's keychain-based PasswordManager.  We
@@ -283,7 +283,7 @@
 // TODO(MUKAI): remove this class after the transition.
 class DeprecatedMacPasswordManager : public PasswordManagerInterface {
  public:
-  DeprecatedMacPasswordManager(const string &key = kProductPrefix)
+  DeprecatedMacPasswordManager(const string &key = "GoogleJapaneseInput")
       : key_(key) {}
 
   bool FindKeychainItem(string *password, SecKeychainItemRef *item_ref) const {
Index: client/client.cc
===================================================================
--- client/client.cc	(revision 70)
+++ client/client.cc	(working copy)
@@ -60,7 +60,11 @@
 namespace client {
 
 namespace {
+#if defined(OS_MACOSX) && !defined(GOOGLE_JAPANESE_INPUT_BUILD)
+const char kServerAddress[]    = "mozc_session";  // name for the IPC connection.
+#else
 const char kServerAddress[]    = "session";  // name for the IPC connection.
+#endif
 const int    kResultBufferSize = 8192 * 32;   // size of IPC buffer
 const size_t kMaxPlayBackSize  = 512;   // size of maximum history
 
Index: build_mozc.py
===================================================================
--- build_mozc.py	(revision 84)
+++ build_mozc.py	(working copy)
@@ -238,6 +238,8 @@
     # These files will be excluded in GypMain().
     gyp_file_names.append('%s/chrome/skk/skk.gyp' % SRC_DIR)
     gyp_file_names.append('%s/chrome/skk/skk_util_test.gyp' % SRC_DIR)
+  elif IsMac():
+    gyp_file_names.extend(glob.glob('%s/unix/uim/*.gyp' % SRC_DIR))
   gyp_file_names.extend(glob.glob('third_party/rx/*.gyp'))
   gyp_file_names.sort()
   return gyp_file_names
